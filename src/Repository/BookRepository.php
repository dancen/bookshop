<?php

namespace App\Repository;

/**
 * BookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookRepository extends \Doctrine\ORM\EntityRepository
{
    
    
    /**
     * getBooksByAuthor
     *
     * @param string $author
     * @return array
     */
    public function getBooksByAuthor($author) {
                
        $em = $this->getEntityManager();
        $RAW_QUERY = "SELECT t.* FROM bookshop_book AS t WHERE t.author = :author";
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->execute(array("author" => $author));
        
        return $statement->fetchAll();
        
       
    }
    
    
    
    /**
     * getBooksByCategory
     *
     * @param string $category
     * @return array
     */
    public function getBooksByCategory($category) {
                
        $em = $this->getEntityManager();
        $RAW_QUERY = "SELECT t.* FROM bookshop_book AS t JOIN bookshop_category AS c ON c.id = t.category_id WHERE c.name LIKE :category";
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->execute(array("category" => "%".$category."%"));
        
        return $statement->fetchAll();       
    }
    
    
    
    /**
     * getBooksByCategory
     *
     * @param string $category
     * @return array
     */
    public function getBooksByAuthorAndCategory($author,$category) {
                
        $em = $this->getEntityManager();
        $RAW_QUERY = "SELECT t.* FROM bookshop_book AS t JOIN bookshop_category AS c ON c.id = t.category_id WHERE t.author = :author AND c.name LIKE :category";
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->execute(array("category" => "%".$category."%","author" => $author));
        
        return $statement->fetchAll();       
    }
}
